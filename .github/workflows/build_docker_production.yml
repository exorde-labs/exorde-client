name: Build & Publish the container image - production

concurrency:
  group: build_docker_production
  cancel-in-progress: true

on:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  build-deploy:
    name: Build and Publish (on production)
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU for ARM build
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: "./Dockerfile"
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            ${{ secrets.DEV_CONTAINER_REGISTRY_URL }}/exordelabs/exorde-client:${{ github.event.release.tag_name }}
            ${{ secrets.DEV_CONTAINER_REGISTRY_URL }}/exordelabs/exorde-client:latest

      - name: Send a message to slack if CI has succeeded
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "âœ“ The CI _'${{ github.workflow }}'_ of repository _${{ github.repository }}_ has been successfully deployed. Link to release: ${{ github.event.release.html_url }}."
            }

      - name: Send a message to slack if CI has failed
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": ":x: The CI _'${{ github.workflow }}'_ of repository _${{ github.repository }}_ has failed. Link to release: ${{ github.event.release.html_url }}."
            }
